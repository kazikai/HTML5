/*charset은 선언 안해줘도 되지만, 한글때문에 선언해주는게 명시적으로 좋다. */
@charset "utf-8";

/* reset */
/* body 에는 margin 8px 이 기본적으로 들어가 있다. (userAgent StyleSheet)*/
/* 이걸 초기화 시켜줄 필요가 있음 */
html,
body{
    min-height: 100%;
}
body{
    margin: 0;
}
/* HTML5 Shiv파일이 필요 */
/* HTML5 BLOCK 요소들을 초기화 해줄 필요가 있음 */
header, footer, section, article, nav, aside, figure, figcaption{
    display: block;
}
/*부모 박스가 이미 보다 작을때 이미지 리사이즈 너비, 높이 모두 반응형으로.. */
img,
video,
video>object{
    max-width: 100%;
    height: auto
}
video,
video>object{
    min-width: 100%;
}
.vframe{
    height: 0;
    padding-top: 56.25%;
    position: relative;
}
.vframe>ifame{
    width: 100%;
    height: 100%
    position: absolute;
    top: 0;
    left: 0;

}
/* layout */
/*
[href="#main"]{
    display: none;
}로 표현 해도 되지만. 클래스를 줘서 하는것이 좀더 좋다.
*/
.skip {
    /* display none의 경우, 상지 장애인이 볼수 없기 때문에 */
    /* 아래와 같이 표현 하는게 더 좋다. */
    display: block;
    overflow: hidden;
    height: 1px; /*1px로 준 이유는. 화면에서 높이가 0 이면, 키보드 접근을 하기 어려운 브라우저가 있기 때문에 최소값인 1px로 준다. */
    margin: 0 0 -1px 0; /* 위의 height값이 문제가 된다면. 1px를 음수로 줘서 붙게 만들어준다. */
}
/*a 요소가 (바로가기) 키보드 접근을 받았을 경우 해당 바로가기 메뉴가 바로 나오게끔 아래 처리를 해준다.  */
.skip:focus {
    height: auto;
    text-align: center;
    padding: 10px;
}
/* 반응형 예제에서 변경
.container{
    background: #ddd;
}
.header{
    background: red;
}
.body{
    background: green;
}
main{
    background: black;
}
.lnb{
    background: #333;
}
.aside{
    background: purple;
}
.footer{
    background: blue;
}
*/
/* Common component*/
.table{
    overflow: hidden;
}
.table>table{
    border: 1px solid #ccc;
    border-right: 0;
    border-bottom: 0;
}
.table th,
.table td{
    border: 1px solid #ccc;
    border-top: 0;
    border-left: 0;
}
/* All ( 공통 스타일, 모바일, 태블릿, 데스크탑 모두 ) */
/* 먼저 공통 속성을 파악 해두는것이 도움이 된다. */
body{
    background: -webkit-linear-gradient( #ccc,#fff);
    background: -o-linear-gradient( #ccc,#fff);
    background: -moz-linear-gradient( #ccc,#fff);
    background: -ms-linear-gradient( #ccc,#fff);
    background: linear-gradient( #ccc,#fff);
    margin: 0 10px;
    /* 가로 스크롤은 필요 없음 */
    overflow-x: hidden;
}
.container{
    min-width: 300px;
    max-width: 1280px;
    margin: 0 auto;
}
.header>h1{
    font-size: 24px;
    text-shadow: 1px 1px 0 #fff;
    /* x, y, blur, color 순서로
    text-shadow: 1px 1px 0 #fff, -1px -1px 0 #666;
    text-shadow:x y blur color;
    */
}

.lnb{
    background: #fff;
    border-bottom: 1px solid #ccc
}

.lnb>h2{
    /* h2 element는 자동으로 margin을 갖기 때문에 margin을 초기화 해줌 */
    /* css에서 값이 0 인 경우 모든 단위는 생략 가능함, 생략하는 것을 강력히 권장 */
    margin: 0;
    border-top: 1px solid #ccc;
    border-bottom: 1px solid #ccc;
    font-size: 14px;
    padding: 0 10px;
    /* inline text 를 수직으로 중앙 정렬 할 떄 line-height값을 설정하면 자동으로 text가 중앙으로 정렬됨, padding으로 설정 가능하지만, padding으로 top, bottom을 계산하여 지정하여야 하기 때문에 line-height값이 더 편함*/
    line-height: 32px;
}
.lnb>ul {
    margin: 0;
    padding: 0;
    list-style: none;
}
/* 선택자를 작성할 경우 2단계 이상 깊어 지지 않도록 해야 한다. 오른쪽부터 탐색 */
.lnb a{
    text-decoration: none;
    color: #666;
    display: block;
    line-height: 28px;
    padding: 0 10px;
    font-size: 12px;
}
.aside{
    background: #ccc;
    /* border radius가 적용되지 않은 것 처럼 보이는 원인 중 하나는, border radiuse를 설정 한 element 안의 element가 영역을 벗어났기 때문 일 수 있음 */
    border-radius: 4px;
}
/* block 레벨에서 line-height 속성이 수직 중앙 정렬이 되지 않는다. inline일때만 */
.aside>h2{
    margin: 0;
    padding: 0 10px;
    line-height: 32px;
    border-bottom: 1px solid #fff;
    font-size: 14px;
}
.aside>ul{
    margin: 0;
    padding: 0;
    list-style: none;
}
.aside a{
    text-decoration: none;
    color: #000;
    font-size: 12px;
    padding: 0 10px;
    line-height: 28px;
    display: block;
}
.footer{
    /* border 속성 때문에 footer안의 p tag와 수직 마진 중첩 현상이 발생하지 않음 */
    border-top: 1px solid #ccc;
    font-size: 12px;
    margin: 15px 0 0 0;
}
main{
    background: #fff;
    border-radius: 5px;
}
main,
.lnb,
.aside{
    margin-bottom: 15px;
}
.article{
    min-height: 300px;
    padding: 10px;
}
/* bootstrap에서 보통 화면에 보이지 않는 엘리먼트에 적용할 class 명을 sr-only라고 함 screen reader only */
.sr-only {
    /* display: none;속성은 어떻게 해도 접근할 수 없음 즉 시각장애인들도 접근 불가능 */
    /*display: none;*/

    /* 화면에 보이지 않도록 1px 높이로 설정하고 넘어가는 부분은 hidden 처리를 하면 모바일 화면에서는 보이지 않음 */
    /* 높이값을 0px로 하면 어떤 브라우저에서는 화면 낭독기가 없는 엘리먼트로 생각하기 떄문에 높이값을 설정해줌 */
    position: absolute;
    height: 1px;
    overflow: hidden;
}
/* Mobile */
/* only all and ,
 * only 미디어 쿼리만 이 안쪽에 있는 구문을 해석해주세요 라는 의도
 * only이 없어도 된다. 쓸데 없다.
 * all은 대상 미디어를 구분 할 수있음
 * print, screen ....
 * and( & ) ,( | )
 */
@media (max-width: 767px){
    /* 화면을 줄여보면 responsive 로 적용된다.  */
    .gnb{
        margin-bottom: 15px;
    }
    .gnb ul{
        margin: 0;
        padding: 0;
        list-style: none;
    }
    .gnb>ul{
        display: none;
    }
    .gnb a{
        display: block;
        /*모바일에서 터치가 쉽게 만들기위해서는 32px 이상 해주는게 좋다.
         desktop은 16px이상*/
        line-height: 32px;
        padding: 0 10px;
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
        background: #666;
        text-decoration: none;
        color: #fff;
        border-bottom: 1px solid #555;
        font-size: 14px;
    }
    .gnb>ul>li>a{
        background: #333;
    }
    .gnb>button{
        border: 0;
        background: #666;
        width: 46px;
        /* button element 는 유일하게  height + padding 이 아님 */
        height: 40px;
        padding: 40px 0 0 0;
        /* text가 안보이게 하려면 아래 코드를 넣어 주는것이 좋다.*/
        overflow: hidden;
        border-radius: 4px;
        /*흰색봐 4개를 넣고 싶다면 어떻게? */
        /* 포지션이 변경 되어야 함  */
        position: absolute;
        top: 10px;
        right: 10px;
        cursor: pointer;
    }
    /*흰색봐 4개를 넣고 싶다면 어떻게? */
    .gnb>button:before{
        content: '';
        position: absolute;
        top: 6px;
        /* position: aboslute;일 때 left값과 width값을 설정해서 면적을 만들 수 있지만, left, right를 설정하여 너비를 결정할 수 있음,  */
        left: 4px;
        right: 4px;
        /*double은 9px 을 3으로 나눠서 1/3 지점에 하나 3/3 지점에 하나 그림 */
        border-top: 12px double #fff;
        border-bottom: 12px double #fff;
        height: 4px;
    }
}


/* Tablet & Desktop:이게 필요하지 않을수도 있지만, tablet과 dektop에 공통으로 적용 되는 스타일  */
@media (min-width: 768px){
    /* 화면을 줄여보면 responsive 로 적용된다.  */

    .body:after{
     content: '';
     display: block;
     clear: both;
  }
    .gnb{
        margin-bottom: 20px;
    }
   .gnb>ul{
     display: block!important;
     position: relative;
   }
   .gnb>button{
     display: none;
   }
   .gnb ul{
      margin: 0;
      padding: 0;
      list-style: none;
   }
   .gnb ul:after{
      content: '';
      display: block;
      clear: both;
   }
   .gnb ul ul{
     display: none;
   }
   .gnb>ul{
     border-bottom:40px solid #333;
   }
   .gnb>ul>li{
     float: left;
     margin-right: 1px;
   }
   .gnb>ul>li>a{
     display: block;
     line-height: 40px;
     padding: 0 25px;
     text-decoration: none;
     background: #666;
     color: #fff;
     font-weight: bold;
     border-radius: 5px 5px 0 0;
   }
   .gnb>ul>.active>a{
     background: #333;
   }
   .gnb>ul>.active>ul{
     display: block;
     position: absolute;
     left: 0;
   }
   .gnb li li{
     float: left;
   }
   .gnb li li>a{
     line-height: 40px;
     color: #fff;
     text-decoration: none;
     display: block;
     padding: 0 20px;
   }
}

/* Tablet */
@media (min-width: 768px) and (max-width: 1024px){
    /* 화면을 줄여보면 responsive 로 적용된다.  */
    .body {
        /* article 의 오른쪽 공간을 만들기 위해서는 padding 을 사용 한다. */
        padding-right: 200px;
    }
    main {
        /*float left 속성을 준다음 가변 폭을 설정하기 위해 우선 width도 100%로 설정해준다. */
        float: left;
        width: 100%;
        /* 음수 마진을 설정하면 음수 공간 만큼 다른 요소가 들어올수 있다.  */
        margin-right: -180px;
    }
    .lnb,
    .aside{
        float: right;
        /*메뉴를 오른쪽으로 붙이기 위해서 사용 */
        position: relative;
        left: 200px;
        width: 180px;
    }
}

/* Desktop */
@media (min-width: 1025px){
    /* 화면을 줄여보면 responsive 로 적용된다.  */
    .body{
        padding: 0 200px 0 220px;
    }
    main{
        float: left;
        width: 100%;
        margin-right: -100%;
    }
    .lnb{
        float: left;
        width: 200px;
        position: relative;
        right: 220px;
    }
    .aside{
        float: right;
        width: 180px;
        position: relative;
        left: 200px;
    }
}


